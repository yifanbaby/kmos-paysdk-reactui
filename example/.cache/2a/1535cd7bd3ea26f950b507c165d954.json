{"id":"../node_modules/intersection-observer/intersection-observer.js","dependencies":[{"name":"/Users/zhangdonglei/kmos-paysdk-reactui/example/package.json","includedInParent":true,"mtime":1653901705285},{"name":"/Users/zhangdonglei/kmos-paysdk-reactui/node_modules/intersection-observer/package.json","includedInParent":true,"mtime":1644571072333}],"generated":{"js":"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/intersection-observer/intersection-observer.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}}],"sources":{"../node_modules/intersection-observer/intersection-observer.js":"/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n/**\n * Returns the embedding frame element, if any.\n * @param {!Document} doc\n * @return {!Element}\n */\nfunction getFrameElement(doc) {\n  try {\n    return doc.defaultView && doc.defaultView.frameElement || null;\n  } catch (e) {\n    // Ignore the error.\n    return null;\n  }\n}\n\n/**\n * A local reference to the root document.\n */\nvar document = (function(startDoc) {\n  var doc = startDoc;\n  var frame = getFrameElement(doc);\n  while (frame) {\n    doc = frame.ownerDocument;\n    frame = getFrameElement(doc);\n  }\n  return doc;\n})(window.document);\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n/**\n * The signal updater for cross-origin intersection. When not null, it means\n * that the polyfill is configured to work in a cross-origin mode.\n * @type {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nvar crossOriginUpdater = null;\n\n/**\n * The current cross-origin intersection. Only used in the cross-origin mode.\n * @type {DOMRect|ClientRect}\n */\nvar crossOriginRect = null;\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = ensureDOMRect(entry.rootBounds);\n  this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);\n  this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (\n    options.root &&\n    options.root.nodeType != 1 &&\n    options.root.nodeType != 9\n  ) {\n    throw new Error('root must be a Document or Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n\n  /** @private @const {!Array<!Document>} */\n  this._monitoringDocuments = [];\n  /** @private @const {!Array<function()>} */\n  this._monitoringUnsubscribes = [];\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Sets up the polyfill in the cross-origin mode. The result is the\n * updater function that accepts two arguments: `boundingClientRect` and\n * `intersectionRect` - just as these fields would be available to the\n * parent via `IntersectionObserverEntry`. This function should be called\n * each time the iframe receives intersection information from the parent\n * window, e.g. via messaging.\n * @return {function(DOMRect|ClientRect, DOMRect|ClientRect)}\n */\nIntersectionObserver._setupCrossOriginUpdater = function() {\n  if (!crossOriginUpdater) {\n    /**\n     * @param {DOMRect|ClientRect} boundingClientRect\n     * @param {DOMRect|ClientRect} intersectionRect\n     */\n    crossOriginUpdater = function(boundingClientRect, intersectionRect) {\n      if (!boundingClientRect || !intersectionRect) {\n        crossOriginRect = getEmptyRect();\n      } else {\n        crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);\n      }\n      registry.forEach(function(observer) {\n        observer._checkForIntersections();\n      });\n    };\n  }\n  return crossOriginUpdater;\n};\n\n\n/**\n * Resets the cross-origin mode.\n */\nIntersectionObserver._resetCrossOriginUpdater = function() {\n  crossOriginUpdater = null;\n  crossOriginRect = null;\n};\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections(target.ownerDocument);\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n        return item.element != target;\n      });\n  this._unmonitorIntersections(target.ownerDocument);\n  if (this._observationTargets.length == 0) {\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorAllIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function(doc) {\n  var win = doc.defaultView;\n  if (!win) {\n    // Already destroyed.\n    return;\n  }\n  if (this._monitoringDocuments.indexOf(doc) != -1) {\n    // Already monitoring.\n    return;\n  }\n\n  // Private state for monitoring.\n  var callback = this._checkForIntersections;\n  var monitoringInterval = null;\n  var domObserver = null;\n\n  // If a poll interval is set, use polling instead of listening to\n  // resize and scroll events or DOM mutations.\n  if (this.POLL_INTERVAL) {\n    monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);\n  } else {\n    addEvent(win, 'resize', callback, true);\n    addEvent(doc, 'scroll', callback, true);\n    if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in win) {\n      domObserver = new win.MutationObserver(callback);\n      domObserver.observe(doc, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    }\n  }\n\n  this._monitoringDocuments.push(doc);\n  this._monitoringUnsubscribes.push(function() {\n    // Get the window object again. When a friendly iframe is destroyed, it\n    // will be null.\n    var win = doc.defaultView;\n\n    if (win) {\n      if (monitoringInterval) {\n        win.clearInterval(monitoringInterval);\n      }\n      removeEvent(win, 'resize', callback, true);\n    }\n\n    removeEvent(doc, 'scroll', callback, true);\n    if (domObserver) {\n      domObserver.disconnect();\n    }\n  });\n\n  // Also monitor the parent.\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._monitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function(doc) {\n  var index = this._monitoringDocuments.indexOf(doc);\n  if (index == -1) {\n    return;\n  }\n\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n\n  // Check if any dependent targets are still remaining.\n  var hasDependentTargets =\n      this._observationTargets.some(function(item) {\n        var itemDoc = item.element.ownerDocument;\n        // Target is in this context.\n        if (itemDoc == doc) {\n          return true;\n        }\n        // Target is nested in this context.\n        while (itemDoc && itemDoc != rootDoc) {\n          var frame = getFrameElement(itemDoc);\n          itemDoc = frame && frame.ownerDocument;\n          if (itemDoc == doc) {\n            return true;\n          }\n        }\n        return false;\n      });\n  if (hasDependentTargets) {\n    return;\n  }\n\n  // Unsubscribe.\n  var unsubscribe = this._monitoringUnsubscribes[index];\n  this._monitoringDocuments.splice(index, 1);\n  this._monitoringUnsubscribes.splice(index, 1);\n  unsubscribe();\n\n  // Also unmonitor the parent.\n  if (doc != rootDoc) {\n    var frame = getFrameElement(doc);\n    if (frame) {\n      this._unmonitorIntersections(frame.ownerDocument);\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @param {!Document} doc\n * @private\n */\nIntersectionObserver.prototype._unmonitorAllIntersections = function() {\n  var unsubscribes = this._monitoringUnsubscribes.slice(0);\n  this._monitoringDocuments.length = 0;\n  this._monitoringUnsubscribes.length = 0;\n  for (var i = 0; i < unsubscribes.length; i++) {\n    unsubscribes[i]();\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  if (!this.root && crossOriginUpdater && !crossOriginRect) {\n    // Cross origin monitoring, but no initial data available yet.\n    return;\n  }\n\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, targetRect, rootRect);\n\n    var rootBounds = null;\n    if (!this._rootContainsTarget(target)) {\n      rootBounds = getEmptyRect();\n    } else if (!crossOriginUpdater || this.root) {\n      rootBounds = rootRect;\n    }\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootBounds,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} targetRect The bounding rect of the target.\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, targetRect, rootRect) {\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot && parent) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return null;\n\n    if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {\n      atRoot = true;\n      if (parent == this.root || parent == document) {\n        if (crossOriginUpdater && !this.root) {\n          if (!crossOriginRect ||\n              crossOriginRect.width == 0 && crossOriginRect.height == 0) {\n            // A 0-size cross-origin intersection means no-intersection.\n            parent = null;\n            parentRect = null;\n            intersectionRect = null;\n          } else {\n            parentRect = crossOriginRect;\n          }\n        } else {\n          parentRect = rootRect;\n        }\n      } else {\n        // Check if there's a frame that can be navigated to.\n        var frame = getParentNode(parent);\n        var frameRect = frame && getBoundingClientRect(frame);\n        var frameIntersect =\n            frame &&\n            this._computeTargetAndRootIntersection(frame, frameRect, rootRect);\n        if (frameRect && frameIntersect) {\n          parent = frame;\n          parentRect = convertFromParentRect(frameRect, frameIntersect);\n        } else {\n          parent = null;\n          intersectionRect = null;\n        }\n      }\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      var doc = parent.ownerDocument;\n      if (parent != doc.body &&\n          parent != doc.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n    }\n    if (!intersectionRect) break;\n    parent = parent && getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {ClientRect} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root && !isDoc(this.root)) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var doc = isDoc(this.root) ? this.root : document;\n    var html = doc.documentElement;\n    var body = doc.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {DOMRect|ClientRect} rect The rect object to expand.\n * @return {ClientRect} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  var rootDoc =\n    (this.root && (this.root.ownerDocument || this.root)) || document;\n  return (\n    containsDeep(rootDoc, target) &&\n    (!this.root || rootDoc == target.ownerDocument)\n  );\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object|?ClientRect} The intersection rect or undefined if no\n *     intersection is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  } || null;\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {DOMRect|ClientRect} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {ClientRect} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n\n/**\n * Ensure that the result has all of the necessary fields of the DOMRect.\n * Specifically this ensures that `x` and `y` fields are set.\n *\n * @param {?DOMRect|?ClientRect} rect\n * @return {?DOMRect}\n */\nfunction ensureDOMRect(rect) {\n  // A `DOMRect` object has `x` and `y` fields.\n  if (!rect || 'x' in rect) {\n    return rect;\n  }\n  // A IE's `ClientRect` type does not have `x` and `y`. The same is the case\n  // for internally calculated Rect objects. For the purposes of\n  // `IntersectionObserver`, it's sufficient to simply mirror `left` and `top`\n  // for these fields.\n  return {\n    top: rect.top,\n    y: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    x: rect.left,\n    right: rect.right,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\n\n/**\n * Inverts the intersection and bounding rect from the parent (frame) BCR to\n * the local BCR space.\n * @param {DOMRect|ClientRect} parentBoundingRect The parent's bound client rect.\n * @param {DOMRect|ClientRect} parentIntersectionRect The parent's own intersection rect.\n * @return {ClientRect} The local root bounding rect for the parent's children.\n */\nfunction convertFromParentRect(parentBoundingRect, parentIntersectionRect) {\n  var top = parentIntersectionRect.top - parentBoundingRect.top;\n  var left = parentIntersectionRect.left - parentBoundingRect.left;\n  return {\n    top: top,\n    left: left,\n    height: parentIntersectionRect.height,\n    width: parentIntersectionRect.width,\n    bottom: top + parentIntersectionRect.height,\n    right: left + parentIntersectionRect.width\n  };\n}\n\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (node.nodeType == /* DOCUMENT */ 9 && node != document) {\n    // If this node is a document node, look for the embedding frame.\n    return getFrameElement(node);\n  }\n\n  // If the parent has element that is assigned through shadow root slot\n  if (parent && parent.assignedSlot) {\n    parent = parent.assignedSlot.parentNode\n  }\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  return parent;\n}\n\n/**\n * Returns true if `node` is a Document.\n * @param {!Node} node\n * @returns {boolean}\n */\nfunction isDoc(node) {\n  return node && node.nodeType === 9;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n"},"lineCount":1015}},"error":null,"hash":"b4bfaddb78de93f28dd2dc57f6beb08a","cacheData":{"env":{}}}